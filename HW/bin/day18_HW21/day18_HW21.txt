#121. 
Immutable class는 무엇인가? Immutable String은 무엇인가?
Immutable class(불변 클래스)는 변경이 불가능한, 즉 가변적이지 않은 클래스를 말한다.
이는 레퍼런스 타입의 객체이므로 heap 영역에 생성된다.
대표적으로는 String, Boolean, Integer, Float, Long 등이 있다. 
불변 클래스이므로 heap 영역에서 변경이 불가능하지만, 재할당은 가능하다.
단, 주의해야할 점은 heap 영역의 객체가 바뀌는 것이지 heap 영역에 있는 값이 바뀌는 것이 아니란 것이다.

#122. 
그렇다면 왜 Immutable String을 사용할까?
Immutable을 사용하면 생성자나 접근 메소드에 대한 방어 복사가 필요 없으므로
멀티 스레드 환경에서 동기화의 처리 없이도 객체를 공유할 수 있다. 따라서 안전하다.

다만 객체가 가지는 값마다 새로운 객체가 필요하므로 메모리 누수와 새로운 객체를 계속 생성해야 해서
성능저하가 일어날 수 있다.

Immutable class를 만들기 위해서는,
1. 멤버변수를 final로 선언
2. 접근 메서드를 구현하지 않음(Setter 메서드)

1을 통해 멤버 변수가 final로 선언되어 수정이 불가능하고,
2를 통해 setter라는 접근 메서드를 없애 기본적으로 변경시킬 수 있는 모든 상황을 막으면 된다.

#123.
s1, s2, s3라는 세 개의 변수가 있어도 같은 주소를 공유한다.
메모리의 효율성 때문에 같은 문자열끼리는 객체를 공유한다. 즉 주소가 같다.
따라서 동일한 문자열에 상관없이 새로운 객체를 생성하기 위해서는 new 키워드를 입력해야 한다.

#124
문자열 객체를 선언하는 방법 첫 번째, new 연산자를 통해 String 객체를 생성하여 생성자 정보로 문자열 데이터를 넘긴다.

두 번째, new 연산자 없이 사용한다. 

#126.
String 객체는 불변 객체이므로 동일한 객체가 공유될 수 있는 특징이 있다.
따라서 String 객체가 단 하나만 존재하도록 유지할 필요가 있는데,
이 때 사용하는 것이 intern 메서드 이다.
